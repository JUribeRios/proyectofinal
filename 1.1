#include <stdio.h>
#include <iostream>
#include <math.h>
#define g 9.8
#define pi 3.14159
using namespace std;

void mov_parabolico(int v0, int pos0, int ang, int t);
void mov_parabolico_fric(int v0, int pos0, int ang, int t, int fric, int rad);
void choque_elastico();
void rebote();

int main()
{
int a, v0, pos0, ang, t, fric, rad=0;

cout<<"Digite 1 para calcular movimiento parabolico"<<endl;
cout<<"Digite 2 para calcular movimiento parabolico con friccion"<<endl;
cout<<"Digite 3 para calcular colision elastica"<<endl;
cout<<"Digite 4 para calcular rebotes"<<endl;
cin>>a;

switch(a)
{
 case 1:
 cout<<"Digite la velocidad inicial"<<endl;
 cin>>v0;
 cout<<"Digite la posicion inicial"<<endl;
 cin>>pos0;
 cout<<"Digite el angulo"<<endl;
 cin>>ang;
 cout<<"Digite el tiempo"<<endl;
 cin>>t;
 mov_parabolico(v0, pos0, ang, t);
 break;
 
 case 2:
 cout<<"Digite la velocidad inicial"<<endl;
 cin>>v0;
 cout<<"Digite la posicion inicial"<<endl;
 cin>>pos0;
 cout<<"Digite el angulo"<<endl;
 cin>>ang;
 cout<<"Digite el tiempo"<<endl;
 cin>>t;
 cout<<"Digite la constante de friccion"<<endl;
 cin>>fric;
 cout<<"Digite el radio de la particula"<<endl;
 cin>>rad;
 mov_parabolico_fric(v0, pos0, ang, t, fric, rad);
 break;
 
 case 3:
 choque_elastico();
 break;
 
 case 4:
 rebote();
 break;
 
 default:
 std::cout<<"Opcion no valida"<<std::endl;
 break;
}
    
    return 0;
}

void mov_parabolico(int v0, int pos0, int ang, int t)
{float x, y, vx, vy=0;
    
 x= v0*cos(ang*pi/180)*t;
 y= pos0+(v0*sin(ang*pi/180)*t)-0.5*g*pow(t,2);
 vx=v0*cos(ang*pi/180);
 vy=v0*sin(ang*pi/180)-(g*t);
 
 std::cout<<"la posicion en x es "<<x<<std::endl;
 std::cout<<"la posicion en y es "<<y<<std::endl;
 std::cout<<"la velocidad en x es "<<vx<<std::endl;
 std::cout<<"la velocidad en y es "<<vy<<std::endl;
}

void mov_parabolico_fric(int v0, int pos0, int ang, int t, int fric, int rad)
{
    
}

void choque_elastico()
{
    
}

void rebote()
{
    
}
